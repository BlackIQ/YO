#[app::classname("dbg")]

include 'ystdio'
include 'yolib'

func print(list : yolib.list) : void
{
  let count : i32 = list::count()
  for(index in [0..count])
  {
    let item : str = list::get(index)
    io::println(item)
  }
}

func print(map : yolib.map) : void
{
  let size : i32 = map::size()
  for(index in [0..size])
  {
    let key, value: str
    map::get_map(index,key,value)
    io::println("Key -> #{key}#nlValue -> #{value}")
  }
}

func is_num(val:str) : bool
{
  let result : bool = System.Text.RegularExpressions.Regex::IsMatch(val,"^\d+$")
  return result
}

func is_num(val:obj) : bool
{
  let valtostr : str = [str]val
  let result : bool = System.Text.RegularExpressions.Regex::IsMatch(valtostr,"^\d+$")
  return result
}

func is_bool(val:str) : bool
{
  val := val::tolower()
  match(val)
  {
    case "true"
    {
      return true
    }
    case "false"
    {
      return true
    }
    default
    {
      return false
    }
  }
}

func is_bool(val:obj) : bool
{
  let valtostr : str = [str]val
  valtostr := valtostr::tolower()
  match(valtostr)
  {
    case "true"
    {
      return true
    }
    case "false"
    {
      return true
    }
    default
    {
      return false
    }
  }
}
